create or replace NONEDITIONABLE TRIGGER "TG_AUD_HBR" 
AFTER UPDATE OR DELETE ON HBR
FOR EACH ROW
DECLARE
    V_TABELA VARCHAR(30) := 'HBR';
    V_TP_OPERACAO CHAR(1);
    V_ROWID VARCHAR(20);
    V_DATE DATE;
    V_USU_BD VARCHAR(30);
    V_USU_SO VARCHAR(255) := SYS_CONTEXT('USERENV','OS_USER');
    V_IP VARCHAR(100) := SYS_CONTEXT('USERENV','IP_ADDRESS');
    V_MAC VARCHAR(100) := SYS_CONTEXT('USERENV','TERMINAL');
BEGIN
    SELECT USER INTO V_USU_BD FROM DUAL;
    V_ROWID := :OLD.HBR_ID;
    V_DATE := :OLD.H_DT_ENTRADA;

    --Operação de DELETE
    IF DELETING THEN
        V_TP_OPERACAO := 'D';
        --HBR_ID
       
            USER_AUDI.INSERE_DADOS_AUD(V_TABELA,V_TP_OPERACAO,'HBR_ID',:OLD.HBR_ID,NULL,V_ROWID,V_DATE,V_USU_BD,V_USU_SO, V_IP, V_MAC);

        --HBR_COD

            USER_AUDI.INSERE_DADOS_AUD(V_TABELA,V_TP_OPERACAO,'HBR_COD',:OLD.HBR_COD,NULL,V_ROWID,V_DATE,V_USU_BD,V_USU_SO, V_IP, V_MAC);
  
        --H_DT_ENTRADA

             USER_AUDI.INSERE_DADOS_AUD(V_TABELA,V_TP_OPERACAO,'H_DT_ENTRADA',:OLD.H_DT_ENTRADA,NULL,V_ROWID,V_DATE,V_USU_BD,V_USU_SO, V_IP, V_MAC);


    --Operação de UPDATE
    ELSE
        V_TP_OPERACAO := 'U';
        --HBR_ID
        IF (:NEW.HBR_ID <> :OLD.HBR_ID) THEN
            USER_AUDI.INSERE_DADOS_AUD(V_TABELA,V_TP_OPERACAO,'HBR_ID',:OLD.HBR_ID,:NEW.HBR_ID,V_ROWID,V_DATE,V_USU_BD,V_USU_SO, V_IP, V_MAC);
        END IF;
        --HBR_COD
        IF (:NEW.HBR_COD <> :OLD.HBR_COD) THEN
            USER_AUDI.INSERE_DADOS_AUD(V_TABELA,V_TP_OPERACAO,'HBR_COD',:OLD.HBR_COD,:NEW.HBR_COD,V_ROWID,V_DATE,V_USU_BD,V_USU_SO, V_IP, V_MAC);
        END IF;
        --H_DT_ENTRADA
        IF (:NEW.H_DT_ENTRADA <> :OLD.H_DT_ENTRADA) THEN
             USER_AUDI.INSERE_DADOS_AUD(V_TABELA,V_TP_OPERACAO,'H_DT_ENTRADA',:OLD.H_DT_ENTRADA,:NEW.H_DT_ENTRADA,V_ROWID,V_DATE,V_USU_BD,V_USU_SO, V_IP, V_MAC);
        END IF;
    END IF;
END;
/

